/*
 * Copyright 2014 Timothy Brooks
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */


def isReleaseBuild

def sonatypeRepositoryUrl

if (!version.endsWith("SNAPSHOT")) {
    isReleaseBuild = true
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else {
    isReleaseBuild = false
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
}

ext {
    if (!project.hasProperty('ossrhUsername'))
        ossrhUsername = ''

    if (!project.hasProperty('ossrhPassword'))
        ossrhPassword = ''
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'signing'

    group = 'net.uncontended'
    version = '0.3.0-SNAPSHOT'

    compileJava {
        sourceCompatibility = 1.7
        targetCompatibility = 1.7
    }

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile 'org.mockito:mockito-core:1.10.8'
        testCompile 'junit:junit:4.12'
    }

    task testJar(type: Jar, dependsOn: testClasses) {
        baseName = "test-${project.archivesBaseName}"
        from sourceSets.test.output
    }

    javadoc {
        title = '<h1>Precipice</h1>'

        options.bottom = '<i>Copyright &#169; 2014 Tim Brooks. All Rights Reserved.</i>'
        options.addStringOption('XDignore.symbol.file', '-quiet')
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                if (isReleaseBuild) {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                }

                repository(url: sonatypeRepositoryUrl) {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                    name = 'Precipice'
                    packaging = 'jar'
                    description = 'Precipice provides tools to manage access to and usage of services.'
                    url = 'https://github.com/tbrooks8/Precipice'

                    scm {
                        url = 'https://github.com:tbrooks8/Precipice.git'
                        connection = 'scm:git@github.com:tbrooks8/Precipice.git'
                        developerConnection = 'scm:git@github.com:tbrooks8/Precipice.git'
                    }

                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution = 'repo'
                        }
                    }

                    developers {
                        developer {
                            id = 'tbrooks8'
                            name = 'Tim Brooks'
                            email = 'tim@uncontended.net'
                            url = 'https://github.com/tbrooks8'
                        }
                    }
                }
            }
        }
    }
}

project(':precipice-core') {

    dependencies {
        compile 'org.hdrhistogram:HdrHistogram:2.1.6'
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives jar

        archives javadocJar
        archives sourcesJar
    }

}

project(':precipice-samples') {

    dependencies {
        compile 'io.undertow:undertow-core:1.2.10.Final'
        compile 'com.squareup.okhttp:okhttp:2.4.0'
        compile 'com.ning:async-http-client:1.9.30'
        compile 'org.apache.kafka:kafka-clients:0.8.2.1'
        
        compile project(':precipice-core')
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives jar

        archives javadocJar
        archives sourcesJar
    }

}

project(':precipice-reporting') {

    dependencies {
        compile project(':precipice-core')
        compile 'io.undertow:undertow-core:1.2.10.Final'
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives jar

        archives javadocJar
        archives sourcesJar
    }

}